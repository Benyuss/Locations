/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'wannabeprogrammer' at '2016.08.16. 13:42' with Gradle 2.13
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.13/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'eclipse'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
	compile 'com.opencsv:opencsv:3.8'
	compile 'org.apache.logging.log4j:log4j-core:2.6.2'
	compile 'org.springframework.boot:spring-boot-starter-web:1.4.0.RELEASE'
	compile 'org.apache.tomcat.embed:tomcat-embed-jasper:9.0.0.M9'
	compile 'javax.servlet:jstl:1.2'
	compile 'org.springframework.boot:spring-boot-starter-actuator:1.4.0.RELEASE'
	compile 'commons-fileupload:commons-fileupload:1.3.2'
	compile 'org.apache.commons:commons-csv:1.4'
	compile 'com.h2database:h2:1.4.192'
	
	
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
